$ awk -F "\t" '$5 != "Evidence" {print $5}' miRNAsRaton.txt | sort | uniq -c #awk es un lenguaje que puede utilizarse para busqueda de patrones y filtrado en bases de datos extensas. En este caso la opción -F con "\t" establece tabulador como separador de las columnas. Posterior a ello se ingresan las intruacciones ente  comillas simples '', con $5 != "Evidence" se indica que si en la columna 5 el campo es diferente a "Evidence" (Entre comillas por ser cadena de texto)(Para eliminar el título de las columnas), entonces imprima la columna 5 (la intrucción debe ir entre corchetes {}), que es donde se encuentra al macenada el tipo de evidencia para cada miRNA del archivo. Posteriormente se usa la combinación de sort y uniq -c para ordenar y contabilizar las veces que aparece cada tipo de evidencia.

$ awk -F "\t" '$5 != "Evidence" {print $1}' miRNAsRaton.txt | sort | uniq -c | sort -n #Esta línea es parecida a la anterior, con la diferencia de que en lugar de imprimir la columna 5 se cambia la intrucción para imprimir la columna 1, en dónde se encuentra los nombres de los cromosomas en los que se encuentran cada uno de los miRNAs enlistados. Usando la combinación de los comandos sort y uniq -c permite enlistar y contabilizar las veces que se repite cada cromosoma, posteriormente usar sort -n ordena numéricamente de forma ascendente los cromosomas por cantidad de miRNAs.

$ awk -F "\t" '$5 != "Evidence" {print $3-$2}' miRNAsRaton.txt | sort -nu | head -1 #awk también puede realizar operaciones aritméticas. En este caso la línea indica que usando tabulador como separador de columnas y si en la columna 5 es diferente a "Evidence", entonces imprima el resultado de restar la columna 3 a la columna 2, así se puede obtener el tamaño de cada uno de los miRNAs enlistados. Sortea -nu ordena numéricamente y de forma ascendente los tamaños, ademas de eliminar las repeticiones. El comando head -1 muestra el primer resultado de esa lista, es decir el tamaño del miRNA más corto.
$ awk -F "\t" '$5 != "Evidence" {print $3-$2}' miRNAsRaton.txt | sort -nu | tail -1 #Es el mismo comando que en la línea anterior, solamente que ahora en lugar de mostrar el primer elemento de la lista con tail -1 muestra el último elemento, es decir el tamaño del miRNA más largo.
$ awk -F "\t" '$5 != "Evidence" && $3-$2==5 {print $0}' miRNAsRaton.txt #awk también acepta operadores lógicos, en este caso && es AND, la intrucción dice que si la columna 5 es diferente a "Evidence" Y la diferencia de la columna 3 y la columna 2 es 5 (el tamaño del miRNA más corto) entonces imprima todas las columnas ($0) de las líneas que cumplan con esas condiciones.
$ awk -F "\t" '$5 != "Evidence" && $3-$2==7894 {print $0}' miRNAsRaton.txt #Se repite la instrucción pero con la condición de que la diferencia entre la columna 3 y 2 sea de 7894, es decir el tamaño del miRNA más largo.

$ awk -F "\t" '$5 != "Evidence" && $1==11 {print $3-$2}' miRNAsRaton.txt | sort -nu | head -1 #Este conjunto de líneas de código es parecido al conjunto anterior, la diferencia radica en que se ha agregado una condición más, que indica que en la columna 1 debe ser igual a 11, con el objetivo de seleccionar solo los miRNAs del cromosoma 11 (El cromosoma con más registros de miRNAs). Con esta línea se obtiene el tamaño del miRNA más corto. 
$ awk -F "\t" '$5 != "Evidence" && $1==11 {print $3-$2}' miRNAsRaton.txt | sort -nu | tail -1 #Con esta línea se obtiene el tamaño del miRNA más largo.
$ awk -F "\t" '$5 != "Evidence" && $1==11 && $3-$2==6 {print $0}' miRNAsRaton.txt #Con esta línea se obtiene los registros de los miRNAs que tengan 6pb (más corto) del cromosoma 11.
$ awk -F "\t" '$5 != "Evidence" && $1==11 && $3-$2==3895 {print $0}' miRNAsRaton.txt #Con esta línea se obtiene los registros de los miRNAs que tengan 3895pb (más largo) del cromosoma 11.
